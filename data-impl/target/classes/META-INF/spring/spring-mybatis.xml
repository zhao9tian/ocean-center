<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
        <!-- 数据源 -->
        <bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource">
            <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
            <property name="url" value="jdbc:mysql://118.178.59.147:3306/freshfun?useUnicode=true&amp;characterEncoding=utf8"></property>
            <property name="username" value="root"></property>
            <property name="password" value="FreshFun~2016"></property>
            <property name="maxActive" value="2" />
	        <property name="initialSize" value="1" />
	        <property name="maxIdle" value="2" />
	        <property name="minIdle" value="1" />
	        <!-- 等待连接超时时间，30秒 -->
	        <property name="maxWait" value="30000" />
        </bean>
        <!-- 数据库 -->
        <bean id="readDataSource" parent="parentDataSource">
            <property name="username" value="root"></property>
            <property name="password" value="FreshFun~2016"></property>
        </bean>
        <bean id="writeDataSource" parent="parentDataSource">
            <property name="username" value="root"></property>
            <property name="password" value="FreshFun~2016"></property>
        </bean>
        <!-- spring配置文件配置多数据源关系 -->
        <bean id="dataSource" class="com.quxin.freshfun.db.DynamicDataSource">
            <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry key="ORCL" value-ref="readDataSource"></entry>
                    <entry key="ISC" value-ref="writeDataSource"></entry>
                </map>
            </property>
            <property name="defaultTargetDataSource" ref="readDataSource"></property>
        </bean>
        <!-- myBatis文件 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"></property>
            <property name="mapperLocations">
                <list>
                    <value>classpath:mapper/**/*.xml</value>
                </list>
            </property>
        </bean>

        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="com.quxin.freshfun.dao"></property>
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        </bean>

        <!-- 事务管理器 -->
        <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
			 <!--<property name="dataSource" ref="dataSource"></property>-->
        <!--</bean>-->

        <!-- 拦截器方式配置事务 -->
        <!--<tx:advice id="transactionAdvice" transaction-manager="transactionManager">-->
            <!--<tx:attributes>-->
                <!--<tx:method name="insert*" propagation="REQUIRED"/>-->
                <!--<tx:method name="add*" propagation="REQUIRED"/>-->
                <!--<tx:method name="update*" propagation="REQUIRED"/>-->
                <!--<tx:method name="del*" propagation="REQUIRED"/>-->
                <!--<tx:method name="delete*" propagation="REQUIRED"/>-->

                <!--<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>-->
                <!--<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>-->
                <!--<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>-->
            <!--</tx:attributes>-->
        <!--</tx:advice>-->
        <!-- Spring aop事务管理 -->
        <!--<aop:config>-->
            <!--<aop:pointcut expression="execution(* com.quxin.freshfun.impl..*.*(..))" id="transactionPointcut"/>-->
            <!--<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut" />-->
        <!--</aop:config>-->
</beans>